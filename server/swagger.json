{
    "openapi": "3.0.0",
    "info": {
        "title": "Career Insight",
        "description": "Graduation Project",
        "version": "0.1.5"
    },
    "servers": [
        {
            "url": "http://localhost:8000/",
            "description": "Development server"
        }
    ],
    "components": {
        "responses": {
            "UnauthorizedError": {
                "description": "Access token is missing or invalid",
                "content": {
                "application/json": {
                    "example": {
                        "error": "Unauthorized",
                        "message": "Access token is missing or invalid"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
            },
            "OAuth2":{
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
                        "tokenUrl": "https://oauth2.googleapis.com/token",
                        "scopes": {
                            "openapi": "OpenID scope"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get":{
                "summary": "sent page : landing page (welcome page)",
                "responses": {
                    "234": {
                        "description": "landing page"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post":{
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Register a new user",
                "requestBody": {
                    "description": "User registration request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "firstName":{
                                        "type": "string",
                                        "required": true
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "email":{
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "phone": {
                                        "type": "number",
                                        "required": true
                                    },
                                    "password":{
                                        "type": "string",
                                        "required": true
                                    },
                                    "passwordConfirm": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "User registered/created successfully"
                    },
                    "401":{
                        "description": "Bad request, user registration failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/api/v1/auth/verify":{
            "post": {
                "summary": "check user email & send verification code to user email",
                "requestBody": {
                    "description":"verification code request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type":"object",
                                "properties": {
                                    "verificationCode":{
                                        "type":"string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "email":{
                                        "description":"Retrieve the email from the session",
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Email verification successful. User now has access."
                    },
                    "400": {
                        "description": "Error during email verification"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "login user",
                "requestBody" :{
                    "description": "User login request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "email":{
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "password":{
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "User login successfully"
                    },
                    "401":{
                        "description": "Bad request, user login failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "get":{
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "logout user",
                "responses": {
                    "200":{
                        "description": "successfully logged out.",
                        "content": {
                            "application/json": {
                                "example":{
                                    "message": "Logged out successfully"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Bad request, user logout failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/api/v1/authWithGoogle":{
            "get":{
                "summary": "Secure Endpoint",
                "description": "Endpoint secured with OAuth 2.0 using Google as the provider.",
                "security": [
                    {
                        "OAuth2":[
                            "openapi"
                        ]
                    }
                ],
                "responses": {
                    "200":{
                        "description": "Successfully accessed secure endpoint.",
                        "content": {
                            "application/json":{
                                "example":{
                                    "message": "Secure endpoint accessed successfully."
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized. Authentication failed.",
                        "content": {
                            "application/json":{
                                "example":{
                                    "error": "Unauthorized",
                                    "message": "Authentication failed. Please check your credentials."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard/general/programming-languages/top-ten": {
            "get": {
                "summary": "Get Top Ten Programming Languages",
                "description": "Retrieves a list of the top ten programming languages based on distribution.",
                "responses": {
                    "200": {
                        "description": "A list of the top ten programming languages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Programming Language"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "JavaScript",
                                        "v": 5000
                                    },
                                    {
                                        "k": "Python",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/programming-languages/{count}": {
            "get": {
                "summary": "Get Top Programming Languages by Count",
                "description": "Retrieves a list of the top programming languages based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top programming languages to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 18,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top programming languages based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Programming Language"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "JavaScript",
                                        "v": 5000
                                    },
                                    {
                                        "k": "HTML",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/frontend-technologies/{count}": {
            "get": {
                "summary": "Get Top Frontend technologies by Count",
                "description": "Retrieves a list of the top Frontend technologies based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top Frontend technologies to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 14,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top Frontend technologies based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Frontend technology"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "Node.js",
                                        "v": 5000
                                    },
                                    {
                                        "k": "AWS",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/backend-technologies/{count}": {
            "get": {
                "summary": "Get Top Frontend technologies by Count",
                "description": "Retrieves a list of the top Backend technologies based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top  Backend technologies to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 55,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top  Backend technologies based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": " Backend technology"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/offering-distributions": {
            "get": {
                "summary": "Get of Offering Distributions",
                "description": "Retrieves a list of the Offering Distributions based on market.",
                "responses": {
                    "200": {
                        "description": "A list of Offering Distributions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Jop Offering"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs": {
            "get": {
                "summary": "Get Job Frequency",
                "description": "Retrieves the frequency of jobs filtered by year, month, and country.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 12
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dictionary of job frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "The frequency of the job"
                                    }
                                },
                                "example": {
                                    "Software Engineer": 150,
                                    "Data Scientist": 100
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid query parameters.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid query parameter. Please check your inputs."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/skill/{track_name}": {
            "get": {
                "summary": "Get Skill Demand Analysis",
                "description": "Identifies the most in-demand skills by analyzing the frequency of skill mentions in job postings for a given track.",
                "parameters": [
                    {
                        "name": "track_name",
                        "in": "path",
                        "description": "The track name to filter the skill demand analysis.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dictionary of skills and their frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer",
                                                "description": "The frequency of the skill mention"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "JavaScript": { "count": 150 },
                                    "Python": { "count": 100 }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid track name parameter.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid track name parameter. Please check your inputs."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/frequency-of-experience-levels": {
            "get": {
                "summary": "Get Frequency of Experience Levels",
                "description": "Retrieves the frequency of experience levels in job postings.",
                "responses": {
                    "200": {
                        "description": "A dictionary of experience levels and their frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "The frequency of the experience level"
                                    }
                                },
                                "example": {
                                    "Entry Level": 150,
                                    "Mid Level": 100
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/frequency-of-job-by-country": {
            "get": {
                "summary": "Get Frequency of Job by Country",
                "description": "Retrieves the frequency of job postings by country.",
                "responses": {
                    "200": {
                        "description": "A dictionary of job frequencies by country",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "The frequency of the job"
                                    }
                                },
                                "example": {
                                    "USA": 150,
                                    "India": 100
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/trend/{track}": {
            "get": {
                "summary": "Get Trend in Technology",
                "description": "Retrieves the trend in technology for a given track.",
                "parameters": [
                    {
                        "name": "track",
                        "in": "path",
                        "description": "The track to retrieve the trend for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dictionary of technologies and their frequencies for the given track",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "The frequency of the technology"
                                    }
                                },
                                "example": {
                                    "JavaScript": 150,
                                    "Python": 100
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/recommended-tech-stack": {
            "get": {
                "summary": "Get Recommended Tech Stack",
                "description": "Retrieves the recommended tech stack based on job postings.",
                "responses": {
                    "200": {
                        "description": "A list of recommended tech stacks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "description": "Recommended tech stack"
                                    }
                                },
                                "example": ["JavaScript", "Python"]
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/salary-insights/job-roles/{jobRole}": {
            "get": {
                "summary": "Get Salary Insights on Job Roles",
                "description": "Retrieves the average salary for a given job role.",
                "parameters": [
                    {
                        "name": "jobRole",
                        "in": "path",
                        "description": "The job role to retrieve the salary insights for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The average salary for the given job role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "jobRole": {
                                            "type": "string",
                                            "description": "The job role"
                                        },
                                        "averageSalary": {
                                            "type": "number",
                                            "description": "The average salary"
                                        }
                                    }
                                },
                                "example": {
                                    "jobRole": "Software Engineer",
                                    "averageSalary": 100000
                                }
                            }
                        },
                        "404": {
                            "description": "Job role not found"
                        },
                        "500": {
                            "description": "Internal Server Error"
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/salary-insights/career-levels/{careerLevel}": {
            "get": {
                "summary": "Get Salary Insights on Career Levels",
                "description": "Retrieves the average salary for a given career level.",
                "parameters": [
                    {
                        "name": "careerLevel",
                        "in": "path",
                        "description": "The career level to retrieve the salary insights for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The average salary for the given career level",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "careerLevel": {
                                            "type": "string",
                                            "description": "The career level"
                                        },
                                        "averageSalary": {
                                            "type": "number",
                                            "description": "The average salary"
                                        }
                                    }
                                },
                                "example": {
                                    "careerLevel": "Entry Level",
                                    "averageSalary": 50000
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Career level not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/companies/get-company": {
            "get": {
                "summary": "Get Company by Name",
                "description": "Retrieves a company by its name.",
                "parameters": [
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The company was found and returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "company_name": {
                                            "type": "string",
                                            "description": "The name of the company"
                                        },
                                        "other_properties": {
                                            "type": "string",
                                            "description": "Other properties of the company"
                                        }
                                    }
                                },
                                "example": {
                                    "company_name": "Company A",
                                    "other_properties": "..."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The company was not found."
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/interests/add-data": {
            "post": {
                "summary": "Update data collection for a user.",
                "tags": ["Data Collection"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interestedJob": {
                                        "type": "string"
                                    },
                                    "interestedSkills": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "careerLevel": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data collection updated successfully."
                    },
                    "400": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/review/best-companies/" : {
            "get": {
                "summary": "Get the best companies based on average ratings",
                "description": "Retrieve a list of the best companies based on various average ratings.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of companies to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of best companies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "avg_overall_rating": {
                                                "type": "number"
                                            },
                                            "avg_work_life_balance": {
                                                "type": "number"
                                            },
                                            "avg_culture_values": {
                                                "type": "number"
                                            },
                                            "avg_diversity_inclusion": {
                                                "type": "number"
                                            },
                                            "avg_career_opportunities": {
                                                "type": "number"
                                            },
                                            "avg_compensation_benefits": {
                                                "type": "number"
                                            },
                                            "avg_senior_management": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Company not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/review/get-reviews/" : {
            "get": {
                "summary": "Get the number of reviews per company",
                "description": "Retrieve the number of reviews for each company.",
                "responses": {
                    "200": {
                        "description": "A list of companies with the number of reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "company_name": {
                                                "type": "string"
                                            },
                                            "count": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/review/get-rating/" : {
            "get": {
                "summary": "Get average rating over time by company name",
                "description": "Retrieve the average rating over time for a specified company.",
                "parameters": [
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company to retrieve ratings for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of average ratings over time",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "Year and month in YYYY-MM format"
                                            },
                                            "avg_rating": {
                                                "type": "number",
                                                "description": "Average rating for the specified time period"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Company not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/review/get-distribution/" : {
            "get": {
                "summary": "Get sentiment distribution by company name",
                "description": "Retrieve the sentiment distribution for a specified company.",
                "parameters": [
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "The name of the company to retrieve sentiment distribution for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of sentiment distribution counts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "Sentiment type"
                                            },
                                            "count": {
                                                "type": "integer",
                                                "description": "Count of reviews for the sentiment type"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "application/json": {
                                "example": {
                                    "message": "Company not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/review/get-get-opinion-on-review/":{
            "get": {
                "summary": "Get the opinion on reviews",
                "description": "Retrieve the average work-life balance rating for companies.",
                "responses": {
                    "200": {
                        "description": "A list of companies with average work-life balance ratings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "Company name"
                                            },
                                            "average_work_life_balance": {
                                                "type": "number",
                                                "description": "Average work-life balance rating for the company"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/review/get-career-opportuities/":{
            "get": {
                "summary": "Get the average career opportunities rating for companies",
                "description": "Retrieve the average career opportunities rating for companies.",
                "responses": {
                    "200": {
                        "description": "A list of companies with average career opportunities ratings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string",
                                                "description": "Company name"
                                            },
                                            "average_career_opportunities": {
                                                "type": "number",
                                                "description": "Average career opportunities rating for the company"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/review/get-overall-rating/":{
            "get": {
                "summary": "Get the overall rating sum by year and company",
                "description": "Retrieve the sum of overall ratings by year and company.",
                "responses": {
                    "200": {
                        "description": "A list of overall rating sums by year and company",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "year": {
                                                "type": "number",
                                                "description": "Year of the overall rating"
                                            },
                                            "firm": {
                                                "type": "string",
                                                "description": "Company name"
                                            },
                                            "overall_rating_sum": {
                                                "type": "number",
                                                "description": "Sum of overall ratings for the year and company"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/static-roadmaps/all-roadmaps": {
            "get": {
                "summary": "Get all roadmaps",
                "description": "Retrieve a list of all roadmaps.",
                "responses": {
                    "200": {
                        "description": "A list of all roadmaps",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/static-roadmaps/roadmap/{id}": {
            "get": {
                "summary": "Get roadmap by ID",
                "description": "Retrieve a specific roadmap by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of the roadmap",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested roadmap"
                    },
                    "404": {
                        "description": "Roadmap not found"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/roadmaps/select-and-save":{
            "post": {
                "summary": "Select and save user roadmap",
                "description": "Select and save a user roadmap.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "description": "ID of the user"
                                    },
                                    "roadmapId": {
                                        "type": "string",
                                        "description": "ID of the roadmap"
                                    }
                                },
                                "required": ["userId", "roadmapId"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Roadmap saved successfully"
                    },
                    "404": {
                        "description": "User or static roadmap not found"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/roadmaps/user/{userId}":{
            "get": {
                "summary": "Get all user roadmaps",
                "description": "Retrieve a list of all roadmaps for a user.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of all user roadmaps",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/roadmaps/user/{userId}/roadmap/{roadmapId}":{
            "get": {
                "summary": "Get user roadmap by ID",
                "description": "Retrieve a specific user roadmap by its ID.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roadmapId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the roadmap",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested user roadmap"
                    },
                    "404": {
                        "description": "User roadmap not found"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete user roadmap by ID",
                "description": "Delete a specific user roadmap by its ID.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roadmapId",
                        "in": "path",
                        "required": true,
                        "description": "ID of the roadmap",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roadmap deleted successfully"
                    },
                    "404": {
                        "description": "Roadmap not found"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/api/v1/target-companies/pl": {
            "get": {
                "summary": "Get all programming languages",
                "description": "Retrieve all unique programming languages from companies",
                "responses": {
                    "200": {
                        "description": "A list of programming languages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/target-companies/frontend-technologies":{
            "get": {
                "summary": "Get all frontend technoloies",
                "description": "Retrieve all unique frontend technoloies from companies",
                "responses": {
                    "200": {
                        "description": "A list of frontend technoloies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/target-companies/backend-technologies":{
            "get": {
                "summary": "Get all Backend technoloies",
                "description": "Retrieve all uniqueBackend technoloies from companies",
                "responses": {
                    "200": {
                        "description": "A list of Backend technoloies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/target-companies/search":{
            "get": {
                "summary": "Search target companies by skills",
                "description": "Search for target companies based on the provided skills.",
                "parameters": [
                    {
                        "name": "skills",
                        "in": "query",
                        "required": true,
                        "description": "Comma-separated list of skills",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of target companies matching the provided skills"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Bad Request",
                                    "message": "Skills query parameter is required"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/target-companies/city": {
            "get": {
                "summary": "Get target companies by city",
                "description": "Get target companies based on the provided city.",
                "parameters": [
                    {
                        "name": "city",
                        "in": "query",
                        "required": true,
                        "description": "City name",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of target companies in the specified city"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Bad Request",
                                    "message": "City query parameter is required"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/target-companies/location":{
            "get": {
                "summary": "Get all company locations",
                "description": "Get all unique locations of target companies.",
                "responses": {
                    "200": {
                        "description": "List of unique company locations"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    }
}