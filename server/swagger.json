{
    "openapi": "3.0.0",
    "info": {
        "title": "Carrer Insight",
        "description": "Graduation Project",
        "version": "0.1.5"
    },
    "servers": [
        {
            "url": "http:/localhost:8000/",
            "description": "Development server"
        }
    ],
    "components": {
        "responses": {
            "UnauthorizedError": {
                "description": "Access token is missing or invalid",
                "content": {
                "application/json": {
                    "example": {
                        "error": "Unauthorized",
                        "message": "Access token is missing or invalid"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT"
            },
            "OAuth2":{
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
                        "tokenUrl": "https://oauth2.googleapis.com/token",
                        "scopes": {
                            "openapi": "OpenID scope"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get":{
                "summary": "sent page : landing page (welcome page)",
                "responses": {
                    "234": {
                        "description": "landing page"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post":{
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Register a new user",
                "requestBody": {
                    "description": "User registration request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "firstName":{
                                        "type": "string",
                                        "required": true
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "email":{
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "phone": {
                                        "type": "number",
                                        "required": true
                                    },
                                    "password":{
                                        "type": "string",
                                        "required": true
                                    },
                                    "passwordConfirm": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "User registered/created successfully"
                    },
                    "401":{
                        "description": "Bad request, user registration failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/api/v1/auth/verify":{
            "post": {
                "summary": "check user email & send verification code to user email",
                "requestBody": {
                    "description":"verification code request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type":"object",
                                "properties": {
                                    "verificationCode":{
                                        "type":"string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "email":{
                                        "description":"Retrieve the email from the session",
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Email verification successful. User now has access."
                    },
                    "400": {
                        "description": "Error during email verification"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "login user",
                "requestBody" :{
                    "description": "User login request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "email":{
                                        "type": "string",
                                        "required": true,
                                        "uniqueItems": true
                                    },
                                    "password":{
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "User login successfully"
                    },
                    "401":{
                        "description": "Bad request, user login failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "get":{
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "logout user",
                "responses": {
                    "200":{
                        "description": "successfully logged out.",
                        "content": {
                            "application/json": {
                                "example":{
                                    "message": "Logged out successfully"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Bad request, user logout failed",
                        "$ref": "#/components/responses/UnauthorizedError" 
                    }
                }
            }
        },
        "/auth/google":{
            "get":{
                "summary": "Secure Endpoint",
                "description": "Endpoint secured with OAuth 2.0 using Google as the provider.",
                "security": [
                    {
                        "OAuth2":[
                            "openapi"
                        ]
                    }
                ],
                "responses": {
                    "200":{
                        "description": "Successfully accessed secure endpoint.",
                        "content": {
                            "application/json":{
                                "example":{
                                    "message": "Secure endpoint accessed successfully."
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized. Authentication failed.",
                        "content": {
                            "application/json":{
                                "example":{
                                    "error": "Unauthorized",
                                    "message": "Authentication failed. Please check your credentials."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/dashboard/general/programming-languages/top-ten": {
            "get": {
                "summary": "Get Top Ten Programming Languages",
                "description": "Retrieves a list of the top ten programming languages based on distribution.",
                "responses": {
                    "200": {
                        "description": "A list of the top ten programming languages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Programming Language"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "JavaScript",
                                        "v": 5000
                                    },
                                    {
                                        "k": "Python",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/programming-languages/{count}": {
            "get": {
                "summary": "Get Top Programming Languages by Count",
                "description": "Retrieves a list of the top programming languages based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top programming languages to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 18,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top programming languages based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Programming Language"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "JavaScript",
                                        "v": 5000
                                    },
                                    {
                                        "k": "HTML",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/frontend-technologies/{count}": {
            "get": {
                "summary": "Get Top Frontend technologies by Count",
                "description": "Retrieves a list of the top Frontend technologies based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top Frontend technologies to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 14,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top Frontend technologies based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Frontend technology"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "k": "Node.js",
                                        "v": 5000
                                    },
                                    {
                                        "k": "AWS",
                                        "v": 4500
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/backend-technologies/{count}": {
            "get": {
                "summary": "Get Top Frontend technologies by Count",
                "description": "Retrieves a list of the top Backend technologies based on distribution, limited by the count parameter.",
                "parameters": [
                    {
                        "name": "count",
                        "in": "path",
                        "description": "The number of top  Backend technologies to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 55,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of the top  Backend technologies based on the specified count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": " Backend technology"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid count parameter. Please provide a positive integer or the count exceeds the maximum allowed.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid count parameter. Please provide a positive integer."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/general/offering-distributions": {
            "get": {
                "summary": "Get of Offering Distributions",
                "description": "Retrieves a list of the Offering Distributions based on market.",
                "responses": {
                    "200": {
                        "description": "A list of Offering Distributions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "k": {
                                                "type": "string",
                                                "description": "Jop Offering"
                                            },
                                            "v": {
                                                "type": "number",
                                                "description": "Distribution Count"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs": {
            "get": {
                "summary": "Get Job Frequency",
                "description": "Retrieves the frequency of jobs filtered by year, month, and country.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 12
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Country to filter the job frequency data.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dictionary of job frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "description": "The frequency of the job"
                                    }
                                },
                                "example": {
                                    "Software Engineer": 150,
                                    "Data Scientist": 100
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid query parameters.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid query parameter. Please check your inputs."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/dashboard/jobs/skill/{track_name}": {
            "get": {
                "summary": "Get Skill Demand Analysis",
                "description": "Identifies the most in-demand skills by analyzing the frequency of skill mentions in job postings for a given track.",
                "parameters": [
                    {
                        "name": "track_name",
                        "in": "path",
                        "description": "The track name to filter the skill demand analysis.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A dictionary of skills and their frequencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "integer",
                                                "description": "The frequency of the skill mention"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "JavaScript": { "count": 150 },
                                    "Python": { "count": 100 }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid track name parameter.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "error": "Invalid track name parameter. Please check your inputs."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}